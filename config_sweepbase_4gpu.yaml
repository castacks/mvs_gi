---
fit:
  data:
    class_path: dsta_mvs.support.datamodule.MVSLocalDataModule
    init_args:
      bf: &bf 96
      dist_list: "sweep@dist_list"
      data_dirs: &data_names
        main: # Code always expects "main" dataset
          path: "/dataset/"
          print_imgs: True
          print_imgs_batch_freq: 150
          compute_metrics: True
          batch_size: 8
          type: "synthetic"
          keep_raw_imgs: False
        per_env: # This name is what will be searched at the data_partition.json at the path
          path: "/dataset/"
          print_imgs: True
          print_imgs_batch_freq: 1
          compute_metrics: False
          batch_size: 1
          type: "synthetic"
          keep_raw_imgs: False
        real_data: # Code always expects "main" dataset
          path: "/dataset/20230328_Hawkins/"
          print_imgs: True
          print_imgs_batch_freq: 1
          compute_metrics: False
          batch_size: 1
          num_samples: 25
          step_size: 10
          order: [2, 0, 1]
          type: "real"
          keep_raw_imgs: False
      shuffle_train: True
      shuffle_val: False
      num_workers: 16

  model:
    class_path: dsta_mvs.model.mvs_model.SphericalSweepStereo
    init_args:
      
      val_loader_names: *data_names

      feature_extractor: null
  
      cv_builder: null
      
      cv_regulator:
        class_path: dsta_mvs.model.cost_volume_regulator.UNetCostVolumeRegulatorBase
        init_args:
          in_chs: &feat_chs 16
          final_chs: 1
          u_depth: 3
          blk_width: 4
          stage_factor: 2
          cost_k_sz: 3
          keep_last_chs: [] # TODO: What does this do?
          deconv_k_sz: 3
          sweep_fuse_ch_reduce: 2
          num_cams: &num_cams 3
          only_one_cam: True
          norm_type: 'batch'
          relu_type: &relu_type "leaky"
      
      dist_regressor: 
        class_path: dsta_mvs.model.distance_regressor.DistanceRegressorWithFixedCandidates
        init_args:
          bf: *bf
          dist_cands: "sweep@dist_list"
          interp_scale_factor: 2
          pre_interp: True
      
      augmentation: 
        class_path: dsta_mvs.support.augmentation.AugmentationSequence
        init_args: null
      
      validation_metrics:
        ssim:
          class_path: dsta_mvs.support.loss_function.SSIMMetric
          init_args:
            bf: *bf
            dist_list: "sweep@dist_list"
        rmse:
          class_path: dsta_mvs.support.loss_function.RMSEMetric
          init_args:
            bf: *bf
            dist_list: "sweep@dist_list"
        mae:
          class_path: dsta_mvs.support.loss_function.MAEMetric
          init_args:
            bf: *bf
            dist_list: "sweep@dist_list"
        mae_dist:
          class_path: dsta_mvs.support.loss_function.InverseMetricWrapper
          init_args:
            metric:
              class_path: dsta_mvs.support.loss_function.MAEMetric
              init_args:
                bf: *bf
                dist_list: "sweep@dist_list"
        rmse_dist:
          class_path: dsta_mvs.support.loss_function.InverseMetricWrapper
          init_args:
            metric:
              class_path: dsta_mvs.support.loss_function.RMSEMetric
              init_args:
                bf: *bf
                dist_list: "sweep@dist_list"
        ssim_dist:
          class_path: dsta_mvs.support.loss_function.InverseMetricWrapper
          init_args:
            metric:
              class_path: dsta_mvs.support.loss_function.SSIMMetric
              init_args:
                bf: *bf
                dist_list: "sweep@dist_list"

      volume_loss: null
      
      distance_loss: 
        class_path: dsta_mvs.support.loss_function.MaskedSmoothL1Loss
        init_args:
          dist_regressor:
            class_path: dsta_mvs.model.distance_regressor.DistanceRegressorWithFixedCandidates
            init_args:
              bf: *bf
              dist_cands: "sweep@dist_list"
              interp_scale_factor: 0
              pre_interp: True
      
      loss_weights: [1.0, 0.0]
      visualization_range: [0.5, 100]  

  optimizer:
    class_path: Adam
    init_args:
      lr: 0.0001

  trainer:
    accelerator: gpu
    num_nodes: 1
    strategy: ddp
    max_epochs: 1000
    logger:
      class_path: WandbLogger
      init_args:
        project: dsta-mvs-sweep
        name: sweep@exp_name
        log_model: all
        save_dir: wandb_logs
    callbacks:
      - class_path: ModelCheckpoint
        init_args:
          save_top_k: -1    # save every model
          every_n_epochs: 1 # save every epoch