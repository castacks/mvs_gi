---
fit:
  data:
    class_path: MVSLocalDataModule
    init_args:
      bf: &bf 96
      dist_list: &dist_list [0.5, 1, 2, 5, 7.5, 10, 12.5, 15, 20, 100]
      data_dirs: &data_names
        main: # Code always expects "main" dataset
          path: "/dataset/"
          print_imgs: False
          compute_metrics: True
          batch_size: 8
          type: "synthetic"
        per_env: # This name is what will be searched at the data_partition.json at the path
          path: "/dataset/"
          print_imgs: True
          compute_metrics: False
          batch_size: 1
          type: "synthetic"
        real_data: # Code always expects "main" dataset
          path: "/dataset/20230328_Hawkins/"
          print_imgs: True
          compute_metrics: False
          batch_size: 1
          num_samples: 10
          step_size: 20
          order: [2, 0, 1]
          type: "real"
      shuffle_train: True
      shuffle_val: False
      num_workers: 16

  model:
    class_path: dsta_mvs.model.mvs_model.spherical_sweep_stereo.SphericalSweepStereo
    init_args:
      
      val_loader_names: *data_names

      feature_extractor:
        class_path: SphereEquirectFeatExtraction
        init_args:
          in_size: [512, 2048]
          in_chs: 3
          chs: &feat_chs 8
          k_sz: 3
          layers: [5, 10]
          norm_type: 'batch'
          relu_type: &relu_type 'leaky'
      
      cv_builder:
        class_path: SphericalSweepStdMasked
        init_args:
          num_cams: &num_cams 3
          feat_chs: *feat_chs
          post_k_sz: 3
          norm_type: 'batch'
          relu_type: *relu_type
      
      cv_regulator:
        class_path: UNetCostVolumeRegulator
        init_args:
          in_chs: *feat_chs
          final_chs: 1
          u_depth: 3
          blk_width: 4
          stage_factor: 2
          cost_k_sz: 3
          keep_last_chs: [] # TODO: What does this do?
          deconv_k_sz: 3
          sweep_fuse_ch_reduce: 2
          num_cams: *num_cams
          only_one_cam: True
          norm_type: 'batch'
          relu_type: *relu_type
      
      dist_regressor: 
        class_path: DistanceRegressorWithFixedCandidates
        init_args:
          bf: *bf
          dist_cands: *dist_list
          interp_scale_factor: 2
          pre_interp: True
      
      augmentation: 
        class_path: dsta_mvs.support.augmentation.AugmentationSequence
        init_args:
          transforms:
            - class_path: RandomSingleImageMasking
              init_args:
                scale: [0.05, 0.20]
                ratio: [0.3, 3.3]
                value: 0.0
                same_on_batch: False
                p: 1.0
      
      validation_metrics:
        ssim:
          class_path: SSIMMetric
          init_args:
            bf: *bf
            dist_list: *dist_list
        rmse:
          class_path: RMSEMetric
          init_args:
            bf: *bf
            dist_list: *dist_list
        mae:
          class_path: MAEMetric
          init_args:
            bf: *bf
            dist_list: *dist_list
      
      volume_loss:
        class_path: NearFocusDistanceLoss
        init_args:
          near_loss_func: 
            class_path: VolumeCrossEntropy
            init_args:
              bf: *bf
              dist_list: *dist_list
          near_dist_thresh: &near_thresh 20.0
          loss_weights: [1.0, 0.1]
          far_loss_func: 
            class_path: InBoundsBCEDistanceLoss
            init_args:
              dist_regressor:
                &dist_regressor_loss
                class_path: DistanceRegressorWithFixedCandidates
                init_args:
                  bf: *bf
                  dist_cands: *dist_list
                  interp_scale_factor: 0
                  pre_interp: True
              far_dist_threshold: 100.0
              near_dist_threshold: *near_thresh 
          dist_list: *dist_list
      
      distance_loss: 
        class_path: MaskedSmoothL1Loss
        init_args:
          dist_regressor: *dist_regressor_loss
      
      loss_weights: [1.0, 0.0]
      visualization_range: [0.5, 100]  

  optimizer:
    class_path: Adam
    init_args:
      lr: 0.0001

  trainer:
    accelerator: gpu
    devices: 8
    strategy: ddp
    max_epochs: 1000
    logger:
      class_path: WandbLogger
      init_args:
        project: dsta-mvs-refactor
        name: test_near_focus
        log_model: all
        save_dir: wandb_logs
    callbacks:
      - class_path: ModelCheckpoint
        init_args:
          save_top_k: -1    # save every model
          every_n_epochs: 1 # save every epoch